<%
if (cfg.ota_tpye == "USERSTRATEGY_REALTIME_OTA") {
    reset_to_ota_en = "STD_ON";
} else {
    reset_to_ota_en = "STD_OFF";
}

var mdata = {
    ota_tpye: cfg.ota_tpye,
    buzzer_alarm_en: cfg.buzzer_alarm.en,
    buzzer_hmi_alarm_en: cfg.buzzer_alarm.hmi_buzzer_en,
    buzzer_level1_on_time: cfg.buzzer_alarm.level1_on_time,
    buzzer_level1_off_time: cfg.buzzer_alarm.level1_off_time,
    buzzer_level2_on_time: cfg.buzzer_alarm.level2_on_time,
    buzzer_level2_off_time: cfg.buzzer_alarm.level2_off_time,
    buzzer_level3_on_time: cfg.buzzer_alarm.level3_on_time,
    buzzer_level3_off_time: cfg.buzzer_alarm.level3_off_time,
    self_lock_ac_chg_en: cfg.power_down_control.self_lock.ac_chg_en,
    self_lock_dc_chg_en: cfg.power_down_control.self_lock.dc_chg_en,
    self_lock_dchg_en: cfg.power_down_control.self_lock.dchg_en,
    auto_power_down_en: cfg.power_down_control.auto_power_down.en,
    auto_power_down_current: cfg.power_down_control.auto_power_down.current,
    auto_power_down_time: cfg.power_down_control.auto_power_down.time,
    manual_power_down_en: cfg.power_down_control.manual_power_down.en,
    manual_power_down_type: cfg.power_down_control.manual_power_down.type,
    manual_power_down_delay: cfg.power_down_control.manual_power_down.delay,
    onboard_key_type_mode: cfg.power_down_control.onboard_key_type.mode,
    ac_chg_oc_type: cfg.oc_type.ac_chg_oc_type,
    dc_chg_oc_type: cfg.oc_type.dc_chg_oc_type,
    dchg_oc_type: cfg.oc_type.dchg_oc_type,
    dchg_sp_type: cfg.oc_type.dchg_sp_type,
    lv_protect_en: cfg.lv_protect.en,
    lv_protect_level: cfg.lv_protect.level,
    ltv_protect_en: cfg.ltv_protect.en,
    ltv_protect_level: cfg.ltv_protect.level,
    chg_heat_parameters_en: cfg.chg_heat_parameters.en,
    chg_heat_parameters_start_heat_temp: cfg.chg_heat_parameters.start_heat_temp,
    chg_heat_parameters_stop_heat_temp: cfg.chg_heat_parameters.stop_heat_temp,
    chg_heat_parameters_revert_temp: cfg.chg_heat_parameters.revert_temp,
    chg_heat_parameters_start_heat_volt: cfg.chg_heat_parameters.start_heat_volt,
    chg_heat_parameters_start_heat_current: cfg.chg_heat_parameters.start_heat_current,
    chg_heat_parameters_stop_heat_volt: cfg.chg_heat_parameters.stop_heat_volt,
    chg_heat_parameters_stop_heat_current: cfg.chg_heat_parameters.stop_heat_current,
    chg_heat_parameters_current_flag: cfg.chg_heat_parameters.current_flag,
    chg_user_parameters_en: cfg.chg_user_parameters.en,
    chg_user_parameters_low_temp_start: cfg.chg_user_parameters.low_temp_start,
    chg_user_parameters_low_temp_stop: cfg.chg_user_parameters.low_temp_stop,
    chg_user_parameters_low_temp_chg_current: cfg.chg_user_parameters.low_temp_chg_current,
    chg_user_parameters_low_temp_chg_time: cfg.chg_user_parameters.low_temp_chg_time,
    chg_user_parameters_full_chg_volt: cfg.chg_user_parameters.full_chg_volt,
    chg_user_parameters_chg_end_current: cfg.chg_user_parameters.chg_end_current,
    chg_user_parameters_chg_end_time: cfg.chg_user_parameters.chg_end_time,
    chg_user_parameters_chg_stop_current: cfg.chg_user_parameters.chg_stop_current,
    chg_user_parameters_chg_stop_volt: cfg.chg_user_parameters.chg_stop_volt,
    cur_integration_en: cfg.cur_integration.en,
    cur_integration_current: cfg.cur_integration.current,
    lv_power_down_en: cfg.lv_power_down.en,
    lv_power_down_lv: cfg.lv_power_down.lv,
    lv_power_down_time: cfg.lv_power_down.time,
};


var processedcfg = {mdata: mdata};

globalInfo.setReturn({processedcfg:processedcfg});
%>
#ifndef USER_STRATEGY_CFG_H_
#define USER_STRATEGY_CFG_H_

#include "App_Types.h"
#include "DigitalInput.h"
<%if (mdata.chg_heat_parameters_stop_heat_volt  == 0) {%>
#include "Statistic.h"
<%}%>


/**
 * \brief 实时OTA升级功能开关
 * \details A641主机只能通过实时OTA升级
 */
#define KEY_TYPE_IS_SELFLOCK 0
#define KEY_TYPE_IS_SELFRESET 1
#define KEY_TYPE <%- mdata.onboard_key_type_mode%> //KEY_TYPET

#if defined(A641)
#define USERSTRATEGY_RESET_TO_OTA_EN                STD_ON //对于A641主机 此项必须开启
#else
#define USERSTRATEGY_RESET_TO_OTA_EN                <%- reset_to_ota_en%>
#endif

#if defined(A641)
#if USERSTRATEGY_RESET_TO_OTA_EN == STD_OFF
    #error USERSTRATEGY_RESET_TO_OTA_EN must be STD_ON for A641!
#endif
#endif

/**
 * \brief 蜂鸣器报警功能开关
 */
<% if ((mdata.buzzer_alarm_en == "STD_ON") || (mdata.buzzer_hmi_alarm_en == "STD_ON")){%>
#define USERSTRATEGY_BUZZER_ALARM_EN                STD_ON
<%} else {%>
#define USERSTRATEGY_BUZZER_ALARM_EN                STD_OFF
<%}%>
#define USERSTRATEGY_HMI_BUZZER_ALARM_EN            <%- mdata.buzzer_hmi_alarm_en%>

/**
 * \brief 蜂鸣器报警等级延时时间定义
 */
#define USERSTRATEGY_BUZZER_LEVEL1_ON_TIME          <%- mdata.buzzer_level1_on_time%>U
#define USERSTRATEGY_BUZZER_LEVEL1_OFF_TIME         <%- mdata.buzzer_level1_off_time%>U
#define USERSTRATEGY_BUZZER_LEVEL2_ON_TIME          <%- mdata.buzzer_level2_on_time%>U
#define USERSTRATEGY_BUZZER_LEVEL2_OFF_TIME         <%- mdata.buzzer_level2_off_time%>U
#define USERSTRATEGY_BUZZER_LEVEL3_ON_TIME          <%- mdata.buzzer_level3_on_time%>U
#define USERSTRATEGY_BUZZER_LEVEL3_OFF_TIME         <%- mdata.buzzer_level3_off_time%>U

/**
 * \brief 自动休眠功能开关
 */
#define USERSTRATEGY_AUTO_POWER_DOWN_EN             <%- mdata.auto_power_down_en%>
#define USERSTRATEGY_AUTO_POWER_DOWN_TIME           (<%- mdata.auto_power_down_time%>UL)
#define USERSTRATEGY_AUTO_POWER_DOWN_CURRENT        (<%- mdata.auto_power_down_current%>)

/**
 * \brief 手动休眠功能开关
 */
#define USERSTRATEGY_MANUAL_POWER_DOWN_EN           <%- mdata.manual_power_down_en%>
#define USERSTRATEGY_MANUAL_POWER_DOWN_DELAY        (<%- mdata.manual_power_down_delay%>U)

/**
 * \brief 自锁功能开关
 */
#define USERSTRATEGY_AC_CHG_SELF_LOCK_EN           <%- mdata.self_lock_ac_chg_en%>
#define USERSTRATEGY_DC_CHG_SELF_LOCK_EN           <%- mdata.self_lock_dc_chg_en%>
#define USERSTRATEGY_DCHG_SELF_LOCK_EN             <%- mdata.self_lock_dchg_en%>
/**
 * \brief 手动下电条件是否成立
 * \details 可选项(默认为DIN1)：
 *            DIN1: (DigitalInput_GetDinLevel(DIGITALINPUT_BCU_DIN1) == STD_HIGH)
 *            DIN2: (DigitalInput_GetDinLevel(DIGITALINPUT_BCU_DIN2) == STD_HIGH)
 *            SW1:  (DigitalInput_GetSwitchState(DIGITALINPUT_BCU_SW1) == DIGITALINPUT_SW_ON)
 *            SW2:  (DigitalInput_GetSwitchState(DIGITALINPUT_BCU_SW2) == DIGITALINPUT_SW_ON)
 */
<% if ((mdata.manual_power_down_type == "DIN1") || (mdata.manual_power_down_type == "DIN2")) {%>
#define USERSTRATEGY_IS_MANUAL_POWER_DOWN()         (DigitalInput_GetDinLevel(DIGITALINPUT_BCU_<%- mdata.manual_power_down_type%>) == STD_HIGH)
<%}%>
<% if ((mdata.manual_power_down_type == "SW1") || (mdata.manual_power_down_type == "SW2")) {%>
#define USERSTRATEGY_IS_MANUAL_POWER_DOWN()         (DigitalInput_GetSwitchState(DIGITALINPUT_BCU_<%- mdata.manual_power_down_type%>) == DIGITALINPUT_SW_ON)
<%}%>

/**
 * \brief 过流配置类型定义
 */
#define USERSTRATEGY_OC_TYPE_CURRENT                0U //固定过流值
#define USERSTRATEGY_OC_TYPE_CURRENT_OFFSET         1U //电流偏移
#define USERSTRATEGY_OC_TYPE_PERCENT                2U //电流百分比

#define USERSTRATEGH_AC_CHG_OC_TYPE                 USERSTRATEGY_OC_TYPE_<%- mdata.ac_chg_oc_type%> //慢充过流配置类型
#define USERSTRATEGH_DC_CHG_OC_TYPE                 USERSTRATEGY_OC_TYPE_<%- mdata.dc_chg_oc_type%> //快充过流配置类型
#define USERSTRATEGH_DCHG_OC_TYPE                   USERSTRATEGY_OC_TYPE_<%- mdata.dchg_oc_type%> //放电过流配置类型
#define USERSTRATEGH_DCHG_SP_TYPE                   USERSTRATEGY_OC_TYPE_<%- mdata.dchg_sp_type%> //瞬时放电过流配置类型


/**
 * \brief 放电单体电压低有放电电流时才保护使能
 */
#define USERSTRATEGY_DCHG_LV_PROTECT_WITH_CURRENT_EN    <%- mdata.lv_protect_en%>
#define USERSTRATEGY_DCHG_LV_PROTECT_LEVEL              <%- mdata.lv_protect_level%>

/**
 * \brief 放电总压低有放电电流时才保护使能
 */
#define USERSTRATEGY_DCHG_LTV_PROTECT_WITH_CURRENT_EN   <%- mdata.ltv_protect_en%>
#define USERSTRATEGY_DCHG_LTV_PROTECT_LEVEL             <%- mdata.ltv_protect_level%>

<% if (mdata.chg_heat_parameters_en == "STD_ON") {%>

/**
 * \brief 充电加热策略参数
 */
#define USERSTRATEGY_START_HEAT_TEMP                    TEMPERATURE_FROM_C(<%- mdata.chg_heat_parameters_start_heat_temp%>) // 进入纯加热温度
#define USERSTRATEGY_STOP_HEAT_TEMP                     TEMPERATURE_FROM_C(<%- mdata.chg_heat_parameters_stop_heat_temp%>) // 停止加热进入纯充电温度
<% if (mdata.chg_heat_parameters_revert_temp != 0) {%>
#define USERSTRATEGY_REVERT_TEMP                        <%- mdata.chg_heat_parameters_revert_temp%>U // 回滚温度
<%}%>
#define USERSTRATEGY_START_HEAT_VOLT                    <%- (mdata.chg_heat_parameters_start_heat_volt*10)%>U // 进入纯加热时请求电压 0.1V
#define USERSTRATEGY_START_HEAT_CURRENT                 <%- (mdata.chg_heat_parameters_start_heat_current*10)%> // 进入纯加热时请求电流 0.1A
<% if (mdata.chg_heat_parameters_stop_heat_volt == 0) {%>
#define USERSTRATEGY_STOP_HEAT_VOLT                     Statistic_GetBcu100mvTotalVoltage() // 加热结束进入纯充电时请求电压
<%} else {%>
#define USERSTRATEGY_STOP_HEAT_VOLT                     <%- (mdata.chg_heat_parameters_stop_heat_volt*10)%>U // 加热结束进入纯充电时请求电压 0.1V
<%}%>
#define USERSTRATEGY_STOP_HEAT_CURRENT                  <%- (mdata.chg_heat_parameters_stop_heat_current*10)%> // 加热结束进入纯充电时请求电流 0.1A

<%}%>
#define USERSTRATEGY_CURRENT_FLAG                       <%- mdata.chg_heat_parameters_current_flag%> //加热电流是否经过分流器      TRUE为经过     FALSE为不经过

/**
 * \brief 用户自定义充电策略
 */

#define USERSTRATEGY_CHG_TRATEGY_EN                     <%- mdata.chg_user_parameters_en%> //用户自定义充电策略开关

<% if (mdata.chg_user_parameters_en == 'STD_ON') {%>
#define USERSTRATEGY_LOW_TEMP_START                     TEMPERATURE_FROM_C(<%- mdata.chg_user_parameters_low_temp_start%>) // 低温区间起始温度
#define USERSTRATEGY_LOW_TEMP_STOP                      TEMPERATURE_FROM_C(<%- mdata.chg_user_parameters_low_temp_stop%>) // 低温区间结束温度
#define USERSTRATEGY_LOW_TEMP_CHG_CURRENT               <%- (mdata.chg_user_parameters_low_temp_chg_current*10)%> // 低温区间短时充电电流 0.1A
#define USERSTRATEGY_LOW_TEMP_CHG_TIME                  <%- (mdata.chg_user_parameters_low_temp_chg_time*60000)%>U // 低温区间小电流充电时长 ms
#define USERSTRATEGY_FULL_CHG_VOLT                      <%- mdata.chg_user_parameters_full_chg_volt%>U // 满充电压 mv
#define USERSTRATEGY_CHG_END_CURRENT                    <%- (mdata.chg_user_parameters_chg_end_current*10)%> // 满充后充电电流 0.1A
#define USERSTRATEGY_CHG_END_TIME                       <%- (mdata.chg_user_parameters_chg_end_time*60000)%>U // 满充后小电流充电时长 ms
#define USERSTRATEGY_CHG_STOP_CURRENT                   <%- (mdata.chg_user_parameters_chg_stop_current*10)%> // 满充后停止充电电流 0.1A
#define USERSTRATEGY_CHG_STOP_VOLT                      <%- mdata.chg_user_parameters_chg_stop_volt%>U // 满充后停止充电电压 mv

<%}%>

/**
 * \brief 用户自定义电流积分策略
 */

 #define USERSTRATEGY_CUR_INTEGRATION_EN             <%- mdata.cur_integration_en %>

<% if (mdata.cur_integration_en == 'STD_ON') {%>
#define USERSTARTEGY_CUR_INTEGRATION_CURRENT            <%- (mdata.cur_integration_current*10)%> // 电流大小 0.1A
<%}%>

/**
 * \brief 用户自定义单体电压低休眠策略
 */

 #define USERSTRATEGY_LV_POWER_DOWN_EN                <%- mdata.lv_power_down_en %>

 <% if (mdata.lv_power_down_en == 'STD_ON') {%>
#define USERSTRATEGY_LV_POWER_DOWN_VOLT                <%- mdata.lv_power_down_lv%>U // 低压休眠策略起始电压 mv
#define USERSTRATEGY_LV_POWER_DOWN_TIME                 (<%- mdata.lv_power_down_time%>UL) // 低压休眠策略低压持续时间
<%}%>
#endif
