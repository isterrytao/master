<%
var nomapper = x=> [Math.round(x[0]), Math.round(x[1]), Math.round(x[2]*100), Math.round(x[3]*100)];
var mvMapper = x=> [Math.round(x[0]*1000), Math.round(x[1]*1000), Math.round(x[2]*100), Math.round(x[3]*100)];
var x10mapper = x => [Math.round(x[0]*10), Math.round(x[1]*10), Math.round(x[2]*100), Math.round(x[3]*100)];
var tempmapper = x => [Math.round(x[0]+50), Math.round(x[1]+50), Math.round(x[2]*100), Math.round(x[3]*100)];
var socgmapper = x10mapper
var hvmapper = x10mapper;
var currentmapper = x10mapper;
var percentmapper = x10mapper;

var defaultDefault = [65535,65535,65535,65535];
var tempDefault = [255,255,65535,65535];
var curDefault = [32768,32768,65535,65535];
var socDefault = defaultDefault;
var leakDefault = defaultDefault;
var timeoutDefault = defaultDefault;


var diagnosisitems = [
    {name:"充电单体电压高", mapper: mvMapper, default:defaultDefault, calibrate: true},
    {name:"放电单体电压高", mapper: mvMapper, default:defaultDefault, calibrate: true},
    {name:"充电单体电压低", mapper: mvMapper, default:defaultDefault, calibrate: true},
    {name:"放电单体电压低", mapper: mvMapper, default:defaultDefault, calibrate: true},
    {name:"充电总压高", mapper: hvmapper, default:defaultDefault, calibrate: true},
    {name:"放电总压高", mapper: hvmapper, default:defaultDefault, calibrate: true},
    {name:"充电总压低", mapper: hvmapper, default:defaultDefault, calibrate: true},
    {name:"放电总压低", mapper: hvmapper, default:defaultDefault, calibrate: true},
    {name:"充电总压压差", mapper: hvmapper, default:defaultDefault, calibrate: true},
    {name:"放电总压压差", mapper: hvmapper, default:defaultDefault, calibrate: true},
    {name:"充电单体压差", mapper: mvMapper, default:defaultDefault, calibrate: true},
    {name:"放电单体压差", mapper: mvMapper, default:defaultDefault, calibrate: true},
    {name:"充电高温", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"放电高温", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"充电低温", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"放电低温", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"充电温差", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"放电温差", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"快充过流", mapper: currentmapper, default:curDefault, calibrate: true},
    {name:"慢充过流", mapper: currentmapper, default:curDefault, calibrate: true},
    {name:"回馈过流", mapper: currentmapper, default:curDefault, calibrate: true},
    {name:"持续放电过流", mapper: currentmapper, default:curDefault, calibrate: true},
    {name:"瞬时放电过流", mapper: currentmapper, default:curDefault, calibrate: true},
    {name:"SOC过高", mapper: percentmapper, default:socDefault, calibrate: true},
    {name:"SOC过低", mapper: percentmapper, default:socDefault, calibrate: true},
    {name:"绝缘漏电", mapper: nomapper, default:leakDefault, calibrate: true},
    {name:"充电加热高温", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"放电加热高温", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"充电加热温差", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"放电加热温差", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"充电加热超时", mapper: nomapper, default:timeoutDefault, calibrate: true},
    {name:"放电加热超时", mapper: nomapper, default:timeoutDefault, calibrate: true},
    {name:"充电加热过流", mapper: currentmapper, default:curDefault, calibrate: true},
    {name:"放电加热过流", mapper: currentmapper, default:curDefault, calibrate: true},
    {name:"SOC跳变", mapper: nomapper, default:defaultDefault, calibrate: true},
    {name:"供电电压过低", mapper: mvMapper, default:defaultDefault, calibrate: true},
    {name:"充电极柱高温", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"放电极柱高温", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"充电极柱温差", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"放电极柱温差", mapper: tempmapper, default:tempDefault, calibrate: true},
    {name:"充电电流异常", mapper: currentmapper, default:curDefault, calibrate: true},
    {name:"供电电压过高", mapper: mvMapper, default:defaultDefault, calibrate: true},
    {name:"电压排线脱落", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"温感排线脱落", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"内网通信", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"快充正极高温", mapper: tempmapper, default:tempDefault, calibrate: false},
    {name:"快充负极高温", mapper: tempmapper, default:tempDefault, calibrate: false},
    {name:"慢充AL极高温", mapper: tempmapper, default:tempDefault, calibrate: false},
    {name:"慢充BN极高温", mapper: tempmapper, default:tempDefault, calibrate: false},
    {name:"慢充C极高温", mapper: tempmapper, default:tempDefault, calibrate: false},
    {name:"充电机通信", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"整车通信", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"满充", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"充电插座温感异常", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"预充失败", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"电流异常", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"BMS初始化故障", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"HVIL故障", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"继电器故障", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"加热故障", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"CC2连接故障", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"CC连接故障", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"CP连接故障", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"加热温感异常", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"极柱温感异常", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"电子锁故障", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"多充电连接故障", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"电池数不匹配", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"温感数不匹配", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"供电电压异常", mapper: nomapper, default:defaultDefault, calibrate: false},
    {name:"碰撞故障", mapper: nomapper, default:defaultDefault, calibrate: false},
]

var calibrateparam = JSON.parse(JSON.stringify(cfg));
var diagparams = [];

for (var index = 0; index < diagnosisitems.length; index++) {
    var item = diagnosisitems[index];
    var param = calibrateparam.Diagnosis.find(x=>x.name == item.name);
    var levels = param ? param.levels : [];
    var validLevels = levels.length;
    for (var i=levels.length; i<4; i++) {
        levels.push(item.default);
    }

    diagparams.push({
        name: item.name,
        validLevels: validLevels,
        levels: levels,
        calibrate: item.calibrate,
        mapper: item.mapper,
    });
}

var tempmparammapper = x => {
    return {
        name: x.name,
        temperatureOn: Math.round(x.temperatureOn+50),
        deltaTemperatureOn: Math.round(x.deltaTemperatureOn+50),
        temperatureOnDelay: Math.round(x.temperatureOnDelay*100),
        deltaTemperatureOnDelay: Math.round(x.deltaTemperatureOnDelay*100),
        temperatureOff: Math.round(x.temperatureOff+50),
        deltaTemperatureOff: Math.round(x.deltaTemperatureOff+50),
        temperatureOffDelay: Math.round(x.temperatureOffDelay*100),
        deltaTemperatureOffDelay: Math.round(x.deltaTemperatureOffDelay*100),
    }
}


var EeepParaDefault = {
        totalCap: globalInfo.BatteryInfo.totalCap,
        leftCap: globalInfo.BatteryInfo.initCap,
    };
var SocEfficiency = calibrateparam.SocEfficiency;
var SocCalibParam = calibrateparam.SocCalibParam;
var DCChargeParam = calibrateparam.ChargeParam.find(x=>x.name == "直流快充");
var ACChargeParam = calibrateparam.ChargeParam.find(x=>x.name == "交流慢充");
var TemperatureMPara =  {
        ChargeHeat: tempmparammapper(calibrateparam.TemperatureMParam.find(x=>x.name == "充电加热")),
        DischargeHeat: tempmparammapper(calibrateparam.TemperatureMParam.find(x=>x.name == "放电加热")),
        ChargeRefrigeration: tempmparammapper(calibrateparam.TemperatureMParam.find(x=>x.name == "充电制冷")),
        DischargeRefrigeration: tempmparammapper(calibrateparam.TemperatureMParam.find(x=>x.name == "放电制冷")),
    };

if (!DCChargeParam.hasOwnProperty('chargeCurrentMax')) {
    DCChargeParam['chargeCurrentMax'] = globalInfo.BatteryInfo.dcchargecurrent;
}

if (!ACChargeParam.hasOwnProperty('chargeCurrentMax')) {
    ACChargeParam['chargeCurrentMax'] = globalInfo.BatteryInfo.acchargecurrent;
}
%>
#include "AppParameterM.h"

const ParameterM_DataType ParameterM_EeepParaDefault[] = {
    <%- Math.round(EeepParaDefault.totalCap * 10) %>U, /**< PARAMETERM_EEEP_TOTAL_CAP_INDEX: 总容量 */
    <%- Math.round(EeepParaDefault.leftCap * 10) %>U, /**< PARAMETERM_EEEP_LEFT_CAP_INDEX: 剩余容量 */
    0U, /**< PARAMETERM_EEEP_DISCHARGE_CNT_INDEX: 充放电次数 */
    0U, /**< PARAMETERM_EEEP_DISCHARGE_CNT_STATE_INDEX: 充放电次数状态 */
    0U, /**< PARAMETERM_EEEP_HALL1_ZEROOFFSET_INDEX: HALL1零点电流校准值 */
    0U, /**< PARAMETERM_EEEP_HALL2_ZEROOFFSET_INDEX: HALL2零点电流校准值 */
    0U, /**< PARAMETERM_EEEP_SHUNT_ZEROOFFSET_INDEX: Shunt零点电流校准值 */
    0U, /**< PARAMETERM_EEEP_OCVSOC_TIME_HIGH_INDEX: OCV-SOC校准时间高字节 */
    0U, /**< PARAMETERM_EEEP_OCVSOC_TIME_LOW_INDEX: OCV-SOC校准时间低字节 */
    0xFFFFU, /**< PARAMETERM_EEEP_VIN1_INDEX: VIN1 */
    0xFFFFU, /**< PARAMETERM_EEEP_VIN2_INDEX: VIN2 */
    0xFFFFU, /**< PARAMETERM_EEEP_VIN3_INDEX: VIN3 */
    0xFFFFU, /**< PARAMETERM_EEEP_VIN4_INDEX: VIN4 */
    0xFFFFU, /**< PARAMETERM_EEEP_VIN5_INDEX: VIN5 */
    0xFFFFU, /**< PARAMETERM_EEEP_VIN6_INDEX: VIN6 */
    0xFFFFU, /**< PARAMETERM_EEEP_VIN7_INDEX: VIN7 */
    0xFFFFU, /**< PARAMETERM_EEEP_VIN8_INDEX: VIN8 */
    0xFFFFU, /**< PARAMETERM_EEEP_VIN9_INDEX: VIN9 */
    0xFFFFU, /**< PARAMETERM_EEEP_LEFTCAP_INTEGRAL_L_INDEX: 积分容量低字 */
    0xFFFFU, /**< PARAMETERM_EEEP_LEFTCAP_INTEGRAL_H_INDEX: 积分容量高字 */
    0U, /**< PARAMETERM_EEEP_CUMULATIVE_CHG_CAP_L_INDEX: 累计充电容量低字节 */
    0U, /**< PARAMETERM_EEEP_CUMULATIVE_CHG_CAP_H_INDEX: 累计充电容量高字节 */
    0U, /**< PARAMETERM_EEEP_CUMULATIVE_DCHG_CAP_L_INDEX: 累计放电容量低字节 */
    0U, /**< PARAMETERM_EEEP_CUMULATIVE_DCHG_CAP_H_INDEX: 累计放电容量高字节 */
    1000U, /**< PARAMETERM_EEEP_SHUNT_GAIN_ERROR_INDEX: 分流器增益误差 */
    1000U, /**< PARAMETERM_EEEP_HALL1_GAIN_ERROR_INDEX: HALL1增益误差 */
    1000U, /**< PARAMETERM_EEEP_HALL2_GAIN_ERROR_INDEX: HALL2增益误差 */
    1000U, /**< PARAMETERM_EEEP_HV1_GAIN_ERROR_INDEX: HV1增益误差 */
    1000U, /**< PARAMETERM_EEEP_HV2_GAIN_ERROR_INDEX: HV2增益误差 */
    1000U, /**< PARAMETERM_EEEP_HV3_GAIN_ERROR_INDEX: HV3增益误差 */
    1000U, /**< PARAMETERM_EEEP_HV4_GAIN_ERROR_INDEX: HV4增益误差 */
    1000U, /**< PARAMETERM_EEEP_HV5_GAIN_ERROR_INDEX: HV5增益误差 */
    1000U, /**< PARAMETERM_EEEP_HV6_GAIN_ERROR_INDEX: HV6增益误差 */
    0U, /**< PARAMETERM_EEEP_DCHG_OLV_CNT_STATE_INDEX: 电池过放电计数状态变化，用于记录需掉电保存的状态 */
    0U, /**< PARAMETERM_EEEP_DCHG_OLV_CNT_INDEX: 电池过放电计数 */
};

const ParameterM_EeepParaIndexType ParameterM_EeepParaNum = (ParameterM_EeepParaIndexType)(ARRAY_SIZE(ParameterM_EeepParaDefault));
//const ParameterM_InnerStructType ParameterM_InnerStructData = {
//    &App_BatteryBaseConfigInfo,
//};

static const AppParameterM_CalibParaType AppParameterM_CalibParaConfigInfo = {
{
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {{<%
    var i = 0;
    for (var param of diagparams) {
        if (!param.calibrate) continue; %>
        {{/* <%- i %> <%- JSON.stringify(param) %>*/<%
        var levelIndex = 0;
        for (var lvl of param.levels) {
            var lvl = (levelIndex < param.validLevels) ? param.mapper(lvl) : lvl;
            levelIndex++; %>
            {<%- lvl[0] %>U, <%- lvl[1] %>U, <%- lvl[2] %>U, <%- lvl[3] %>U},<%
        }
        %>
        }},<%
        i++;
    }
    %>
    }},
    { /* <%- JSON.stringify(SocEfficiency) %> */
        <%- SocEfficiency.chargeIntegralEfficiency * 10 %>U, /**< ChargeIntegralEfficiency: 充电效率因子 精度：0.1% */
        <%- SocEfficiency.dischargeIntegralEfficiency * 10 %>U, /**< DischargeIntegralEfficiency: 放电效率因子 精度：0.1% */
    },

    { /* <%- JSON.stringify(SocCalibParam) %> */
        <%- SocCalibParam.capHighCalibAverageVolt %>U, /**< CapHighCalibAverageVolt: 过充容量校正平均电压阈值 */
        <%- SocCalibParam.capLowCalibAverageVolt %>U, /**< CapLowCalibAverageVolt: 过放容量校正平均电压阈值 */
        <%- SocCalibParam.capLowCalibSoc * 10 %>U, /**< CapLowCalibSoc: 过放容量校正SOC阈值 */
        <%- Math.round(100 * SocCalibParam.capLowCalibDelay) %>U, /**< CapLowCalibDelay: 过放容量校正延时 */
    },
    {
        // AC
        { /* <%- JSON.stringify(ACChargeParam) %> */
            <%- ACChargeParam.chargeTotalVoltMax * 10 %>U, /**< chargeTotalVoltMax: 最高允许充电总压 */ /*lint !e524 */
            <%- ACChargeParam.chargeCurrentMax *10 %>U, /**< chargeCurrentMax: 最高允许充电电流 */
            <%- ACChargeParam.chargeCurrentMin *10 %>U, /**< chargeCurrentMin: 最小允许充电电流(截止充电电流) */
            <%- ACChargeParam.fullChargeRelTotalVolt * 10 %>U, /**< fullChargeRelTotalVolt: 满充释放总压 */ /*lint !e524 */
        },
        // DC
        { /* <%- JSON.stringify(DCChargeParam) %> */
            <%- DCChargeParam.chargeTotalVoltMax * 10 %>U, /**< chargeTotalVoltMax: 最高允许充电总压 */ /*lint !e524 */
            <%- DCChargeParam.chargeCurrentMax *10 %>U, /**< chargeCurrentMax: 最高允许充电电流 */
            <%- DCChargeParam.chargeCurrentMin *10 %>U, /**< chargeCurrentMin: 最小允许充电电流(截止充电电流) */
            <%- DCChargeParam.fullChargeRelTotalVolt * 10 %>U, /**< fullChargeRelTotalVolt: 满充释放总压 */ /*lint !e524 */
        },
    },
},
{
        {/* <%- JSON.stringify(TemperatureMPara.ChargeHeat) %> */
            <%- TemperatureMPara.ChargeHeat.temperatureOn %>U, /**< 开启温度 */
            <%- TemperatureMPara.ChargeHeat.deltaTemperatureOn %>U, /**< 开启温差 */
            <%- TemperatureMPara.ChargeHeat.temperatureOnDelay %>U, /**< 开启温度延时 */
            <%- TemperatureMPara.ChargeHeat.deltaTemperatureOnDelay %>U, /**< 开启温差延时 */
            <%- TemperatureMPara.ChargeHeat.temperatureOff %>U, /**< 关闭温度 */
            <%- TemperatureMPara.ChargeHeat.deltaTemperatureOff %>U, /**< 关闭温差 */
            <%- TemperatureMPara.ChargeHeat.temperatureOffDelay %>U, /**< 关闭温度延时 */
            <%- TemperatureMPara.ChargeHeat.deltaTemperatureOffDelay %>U, /**< 关闭温差延时 */
        },
        {/* <%- JSON.stringify(TemperatureMPara.DischargeHeat) %> */
            <%- TemperatureMPara.DischargeHeat.temperatureOn %>U, /**< 开启温度 */
            <%- TemperatureMPara.DischargeHeat.deltaTemperatureOn %>U, /**< 开启温差 */
            <%- TemperatureMPara.DischargeHeat.temperatureOnDelay %>U, /**< 开启温度延时 */
            <%- TemperatureMPara.DischargeHeat.deltaTemperatureOnDelay %>U, /**< 开启温差延时 */
            <%- TemperatureMPara.DischargeHeat.temperatureOff %>U, /**< 关闭温度 */
            <%- TemperatureMPara.DischargeHeat.deltaTemperatureOff %>U, /**< 关闭温差 */
            <%- TemperatureMPara.DischargeHeat.temperatureOffDelay %>U, /**< 关闭温度延时 */
            <%- TemperatureMPara.DischargeHeat.deltaTemperatureOffDelay %>U, /**< 关闭温差延时 */
        },
        {/* <%- JSON.stringify(TemperatureMPara.ChargeRefrigeration) %> */
            <%- TemperatureMPara.ChargeRefrigeration.temperatureOn %>U, /**< 开启温度 */
            <%- TemperatureMPara.ChargeRefrigeration.deltaTemperatureOn %>U, /**< 开启温差 */
            <%- TemperatureMPara.ChargeRefrigeration.temperatureOnDelay %>U, /**< 开启温度延时 */
            <%- TemperatureMPara.ChargeRefrigeration.deltaTemperatureOnDelay %>U, /**< 开启温差延时 */
            <%- TemperatureMPara.ChargeRefrigeration.temperatureOff %>U, /**< 关闭温度 */
            <%- TemperatureMPara.ChargeRefrigeration.deltaTemperatureOff %>U, /**< 关闭温差 */
            <%- TemperatureMPara.ChargeRefrigeration.temperatureOffDelay %>U, /**< 关闭温度延时 */
            <%- TemperatureMPara.ChargeRefrigeration.deltaTemperatureOffDelay %>U, /**< 关闭温差延时 */
        },
        {/* <%- JSON.stringify(TemperatureMPara.DischargeRefrigeration) %> */
            <%- TemperatureMPara.DischargeRefrigeration.temperatureOn %>U, /**< 开启温度 */
            <%- TemperatureMPara.DischargeRefrigeration.deltaTemperatureOn %>U, /**< 开启温差 */
            <%- TemperatureMPara.DischargeRefrigeration.temperatureOnDelay %>U, /**< 开启温度延时 */
            <%- TemperatureMPara.DischargeRefrigeration.deltaTemperatureOnDelay %>U, /**< 开启温差延时 */
            <%- TemperatureMPara.DischargeRefrigeration.temperatureOff %>U, /**< 关闭温度 */
            <%- TemperatureMPara.DischargeRefrigeration.deltaTemperatureOff %>U, /**< 关闭温差 */
            <%- TemperatureMPara.DischargeRefrigeration.temperatureOffDelay %>U, /**< 关闭温度延时 */
            <%- TemperatureMPara.DischargeRefrigeration.deltaTemperatureOffDelay %>U, /**< 关闭温差延时 */
        },
},
};

const ParameterM_CalibParaType *const ParameterM_PFlashCalibParaPtr = &AppParameterM_CalibParaConfigInfo.rtePara;


const Diagnosis_ParaType ParameterM_NoneCalibrateDiagConfig[((uint8)DIAGNOSIS_ITEM_NONE_CALIBRATE_STOP - (uint8)DIAGNOSIS_ITEM_NONE_CALIBRATE_START) + 1U] =
{
<%
var i = 0;
for (var param of diagparams) {
    if (param.calibrate) continue; %>%>
    {{/* DIAGNOSIS_ITEM_NONE_CALIBRATE_START + <%- i %> <%- JSON.stringify(param) %>*/<%
    var levelIndex = 0;
    for (var lvl of param.levels) {
        var lvl = (levelIndex < param.validLevels) ? param.mapper(lvl) : lvl;
        levelIndex++; %>
        {<%- lvl[0] %>U, <%- lvl[1] %>U, <%- lvl[2] %>U, <%- lvl[3] %>U},<%
    }
    %>
    }},<%
    i++;
}
%>

};
